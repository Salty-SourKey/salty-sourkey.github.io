navbar_entries:
  - title: blog
    url: blog

project_entries:
  - title: CinderShard
    url: https://github.com/Salty-SourKey/cindershard-stateless-consensus
    desc: A Byzantine-resilient sharding architecture that simultaneously achieves robustness against single-shard attacks and high scalability.

  - title: Solidity Static Analyzer
    url: https://github.com/Pororo-droid/ast-static-analysis
    desc: A static analysis tool for Solidity smart contracts to identify read/write sets of Ethereum transactions.

publication_entries:
  - title: "CinderShard: A Byzantine-Resilient Sharding Architecture with Decoupled Safety and Liveness"
    url: false
    desc: "**Hwang, S.**, Kim, H., and Ryu, M. (2026). Submitted to the 41st ACM/SIGAPP Symposium on Applied Computing. (Under review)<br><br>This paper introduces CinderShard, a novel sharding architecture that enhances the security and performance of decentralized systems by separating safety and liveness concerns. We demonstrate through our evaluation that CinderShard significantly improves throughput and reduces latency compared to existing solutions. Sharding is a promising approach to improving blockchain scalability by partitioning the network into multiple parallel-processing shards. However, this division inherently weakens security: an adversary can compromise the system by taking control of only one small shard, a threat known as the single-shard attack. Existing sharding protocols mitigate this risk by enlarging shard sizes, ensuring that the fraction of Byzantine nodes in each shard probabilistically converges to the network-wide average. While effective, this approach fundamentally limits scalability by reducing the number of shards that can coexist.<br><br>This paper presents CinderShard, a probabilistic Byzantine Fault Tolerant (BFT) sharding architecture that achieves robustness against single-shard attacks without sacrificing scalability. The key idea is to decouple the two fundamental properties of consensus—safetyand liveness—and address each independently. To this end, CinderShard introduces two complementary mechanisms. The first,Safety-Aware Quorum Amplification (SQA), increases the quorum threshold to probabilistically guarantee safety even when the Byzantine ratio within a shard exceeds the classical one-third bound. The second, Liveness-Driven Dynamic Reconfiguration (LDR), preserves liveness by detecting liveness violations at runtime and reassigning nodes. To minimize reconfiguration overhead, LDR employs a lightweight timeout-based detector and decouples data maintenance from the consensus process within each node."

  - title: "Optimizing Cross-Shard Transaction Execution in EVM through Fine-Grained ReadWrite Set Analysis"
    url: false
    desc: "**Hwang, S.** (2025). Submitted to Korea Software Congress. (Under review)<br><br>Two-Phase Commit (2PC), a prominent protocol for processing cross-shard transactions in sharded blockchain environments, encounters technical limitations when applied to the Ethereum Virtual Machine (EVM). This limitation stems from the 2PC protocol's requirement for a predetermined read/write set to ensure atomicity, whereas EVM transactions determine this set dynamically at runtime.<br><br>This paper presents State Weaving for Pre-Execution (SWPE), a pre-execution protocol that identifies the fine-grained read/write set of cross-shard transactions, even within a state space partitioned by sharding. This precise identification of read/write sets minimizes transaction conflicts during the 2PC process, thereby reducing the transaction abort rate. Furthermore, this paper explores Verkle Tree to organize the shard state. This approach can optimize the proof size required for external state validation during pre-execution, maximizing the protocol's communication efficiency. Our experiments, conducted in a simulated distributed network, demonstrate that the SWPE protocol significantly improves the transaction conflict rate compared to 2PC protocols that rely on static analysis."

  - title: "Unishard: A Scalable Byzantine Sharding Protocol"
    url: false
    desc: "Ryu, M., **Hwang, S.**, Choi, C., Jung, H., and Kang, S. (2025). Submitted to SIGMOD International Conference on Management of Data. (Submitted)<br><br>Cross-shard transactions pose significant scalability challenges in blockchain sharding, primarily due to the high costs of Byzantine Fault Tolerant (BFT) consensus required for every inter-shard communication. This paper introduces Unishard, a scalable Byzantine sharding protocol that reduces these costs while ensuring global consistency under partial synchrony. Unishard builds on two principles—deterministic batching and replication—originally designed for crash fault-tolerant systems in synchronous networks.<br><br>To address the challenges of BFT consensus costs and partial synchrony, we propose three key ideas. First, we propose decoupled transaction ordering, which separates the global ordering of crossshard transactions from local transaction ordering. Second, we propose causal transaction replication, replicating both cross-shard transactions and their causally related ones to reduce communication. Lastly, we introduce snapshot discard-and-recapture, which safely coordinates snapshot updates. These ideas enable Unishard to complete cross-shard transaction batches within three BFT consensus rounds, while local transactions require only one round. Our evaluation in geo-distributed environments shows considerable gains in throughput and latency, outperforming the state-of-the-art Byzantine sharding protocol."

footer_entries:
  - title: twitter
    url: https://x.com/sourkey6077

  - title: github
    url: https://github.com/Salty-SourKey

misc_entries:
  - title: this is an example vertical list
    url: false

  - title: you can show or hide using a boolean flag in _config.yml
    url: false

  - title: and you can add data in _data/home.yml
    url: false

  - title: Blog posts
    post_list: true
    url: false

  - title: moonwalk on the Internet
    url: false
    entries:
      - title: on Github
        url: https://github.com/abhinavs/moonwalk

      - title: originally built for abhinav's homepage
        url: https://www.abhinav.co

      - title: this list is scalable and can be nested
        url: false
        entries:
          - title: this is nested inside a nested list
            url: false

          - title: it is easy to use, see _data/home.yml to see how to configure it.
            url: false